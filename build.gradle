/* use:
 * Download all dependencies - \programs\gradle-4.4.1\bin\gradle getTestRuntimeLibs
 * Download just the export dependencies -  \programs\gradle-4.4.1\bin\gradle getExportLibs
 */

apply plugin: 'java'

configurations {
    compile {}
    export {
        extendsFrom compile
    }
}
compileJava.destinationDir = file("$rootDir/deployment/run/bin")

dependencies {
    // public mendix runtime jars
    testRuntime name: 'com.mendix.public-api'
    testRuntime name: 'com.mendix.json'
    testRuntime name: 'com.mendix.logging-api'
    testRuntime name: 'com.mendix.m2ee-api'
    testRuntime name: 'javax.servlet'
    testRuntime name: 'biz.aQute.bnd.bndlib'
    // unit test module
    testRuntime 'junit:junit:4.12'
    // for appcloudservices
    testRuntime 'org.openid4java:openid4java:1.0.0'
    testRuntime 'commons-lang:commons-lang:2.5'
    testRuntime 'org.apache.ws.commons.axiom:axiom-api:1.2.19'
    // jmustache
    export 'org.parboiled:parboiled-java:1.1.7'
    export 'org.apache.commons:commons-email:1.4'
    export 'org.pegdown:pegdown:1.6.0'
    testRuntime 'org.subethamail:subethasmtp-wiser:1.2'
    export 'com.samskivert:jmustache:1.14-SNAPSHOT'
// object handling
    testRuntime 'commons-io:commons-io:2.3'
    testRuntime 'org.apache.commons:commons-lang3:3.6'
    testRuntime 'org.apache.httpcomponents:httpclient:4.4.1'
    testRuntime 'org.apache.httpcomponents:httpcore:4.4.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.1'
    compile 'com.google.guava:guava:23.0'

}

repositories {
    mavenCentral()
    flatDir {
        dirs '/c://Program Files/Mendix/7.6.0/runtime/bundles', 'userlib-repo'
    }
}

sourceSets {
    main {
        java {
            srcDirs = ['javasource']
        }
        resources {
            srcDirs = ['resources']
        }
    }
}

task getExportlibs(type: Copy) {
    doFirst {
        delete fileTree(dir: "userlib")
    }
    from configurations.export
    into 'userlib/'
    doLast {
        files { file('userlib').listFiles() }.each { File file ->
            println "file found: $file.name"
            def keepFilename = 'userlib/' + file.name + '.MxMustache.RequiredLib'
            ant.touch(file: keepFilename)
        }
    }
}

task getTestRuntimelibs(type: Copy) {
    from configurations.testRuntime
    into 'userlib/'
}
