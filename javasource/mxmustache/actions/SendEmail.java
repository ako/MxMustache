// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package mxmustache.actions;

import com.mendix.core.Core;
import com.mendix.logging.ILogNode;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;
import org.apache.commons.mail.DefaultAuthenticator;
import org.apache.commons.mail.EmailAttachment;
import org.apache.commons.mail.HtmlEmail;
import javax.mail.util.ByteArrayDataSource;
import java.io.InputStream;

public class SendEmail extends CustomJavaAction<java.lang.Boolean>
{
	private java.lang.String To;
	private java.lang.String From;
	private java.lang.String ReplyTo;
	private java.lang.String Subject;
	private java.lang.String Contents;
	private java.lang.String Attachment;
	private java.lang.String AttachmentMimetype;
	private java.lang.String AttachmentFilename;
	private IMendixObject __AttachmentDocument;
	private system.proxies.FileDocument AttachmentDocument;
	private java.lang.String SmtpHost;
	private java.lang.Long SmtpPort;
	private java.lang.String SmtpUsername;
	private java.lang.String SmtpPassword;
	private java.lang.Boolean UseSsl;

	public SendEmail(IContext context, java.lang.String To, java.lang.String From, java.lang.String ReplyTo, java.lang.String Subject, java.lang.String Contents, java.lang.String Attachment, java.lang.String AttachmentMimetype, java.lang.String AttachmentFilename, IMendixObject AttachmentDocument, java.lang.String SmtpHost, java.lang.Long SmtpPort, java.lang.String SmtpUsername, java.lang.String SmtpPassword, java.lang.Boolean UseSsl)
	{
		super(context);
		this.To = To;
		this.From = From;
		this.ReplyTo = ReplyTo;
		this.Subject = Subject;
		this.Contents = Contents;
		this.Attachment = Attachment;
		this.AttachmentMimetype = AttachmentMimetype;
		this.AttachmentFilename = AttachmentFilename;
		this.__AttachmentDocument = AttachmentDocument;
		this.SmtpHost = SmtpHost;
		this.SmtpPort = SmtpPort;
		this.SmtpUsername = SmtpUsername;
		this.SmtpPassword = SmtpPassword;
		this.UseSsl = UseSsl;
	}

	@Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.AttachmentDocument = __AttachmentDocument == null ? null : system.proxies.FileDocument.initialize(getContext(), __AttachmentDocument);

		// BEGIN USER CODE
        ILogNode logger = Core.getLogger(this.getClass().getName());
        logger.info(String.format("SendEmail: host %s, port %s, usr %s, pwd %s, ssl %s, replyTo %s",
                this.SmtpHost, this.SmtpPort, this.SmtpUsername, this.SmtpPassword, this.UseSsl, this.ReplyTo));

        HtmlEmail email = new HtmlEmail();
        email.setHostName(this.SmtpHost);
        email.setSmtpPort(this.SmtpPort.intValue());
        if (!this.SmtpUsername.equals("") && !this.SmtpPassword.equals("")) {
            email.setAuthenticator(new DefaultAuthenticator(this.SmtpUsername, this.SmtpPassword));
        }
        email.setSSLOnConnect(this.UseSsl);
        if (!this.ReplyTo.equals("")) {
            email.addReplyTo(this.ReplyTo);
        }
        email.setFrom(this.From);
        email.setSubject(this.Subject);
        email.setHtmlMsg(this.Contents);
        email.setTextMsg("Your email client does not support HTML messages");
        email.addTo(this.To);
        if (this.Attachment != null && !this.Attachment.equals("") && !this.AttachmentMimetype.equals("")) {
            email.addPart(this.Attachment, this.AttachmentMimetype);
        }
        if (this.AttachmentDocument != null && !this.AttachmentMimetype.equals("")) {
            InputStream is = Core.getFileDocumentContent(getContext(), this.__AttachmentDocument);
            email.attach(new ByteArrayDataSource(is, this.AttachmentMimetype),
                    this.AttachmentFilename, this.Subject,
                    EmailAttachment.ATTACHMENT);
        }

        email.send();

        return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "SendEmail";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
