// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package mxmustache.actions;

import com.mendix.core.Core;
import com.mendix.logging.ILogNode;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import org.apache.commons.mail.DefaultAuthenticator;
import org.apache.commons.mail.HtmlEmail;

/**
 * 
 */
public class SendEmail extends CustomJavaAction<Boolean>
{
	private String To;
	private String From;
	private String ReplyTo;
	private String Subject;
	private String Contents;
	private String Attachment;
	private String AttachmentMimetype;
	private String AttachmentFilename;
	private String SmtpHost;
	private Long SmtpPort;
	private String SmtpUsername;
	private String SmtpPassword;
	private Boolean UseSsl;

	public SendEmail(IContext context, String To, String From, String ReplyTo, String Subject, String Contents, String Attachment, String AttachmentMimetype, String AttachmentFilename, String SmtpHost, Long SmtpPort, String SmtpUsername, String SmtpPassword, Boolean UseSsl)
	{
		super(context);
		this.To = To;
		this.From = From;
		this.ReplyTo = ReplyTo;
		this.Subject = Subject;
		this.Contents = Contents;
		this.Attachment = Attachment;
		this.AttachmentMimetype = AttachmentMimetype;
		this.AttachmentFilename = AttachmentFilename;
		this.SmtpHost = SmtpHost;
		this.SmtpPort = SmtpPort;
		this.SmtpUsername = SmtpUsername;
		this.SmtpPassword = SmtpPassword;
		this.UseSsl = UseSsl;
	}

	@Override
	public Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
        ILogNode logger = Core.getLogger(this.getClass().getName());
        logger.info(String.format("SendEmail: host %s, port %s, usr %s, pwd %s, ssl %s, replyTo %s",
                this.SmtpHost, this.SmtpPort, this.SmtpUsername, this.SmtpPassword, this.UseSsl, this.ReplyTo));

        HtmlEmail email = new HtmlEmail();
        email.setHostName(this.SmtpHost);
        email.setSmtpPort(this.SmtpPort.intValue());
        if(!this.SmtpUsername.equals("") && !this.SmtpPassword.equals("")) {
            email.setAuthenticator(new DefaultAuthenticator(this.SmtpUsername, this.SmtpPassword));
        }
        email.setSSLOnConnect(this.UseSsl);
        if (!this.ReplyTo.equals("")) {
            email.addReplyTo(this.ReplyTo);
        }
        email.setFrom(this.From);
        email.setSubject(this.Subject);
        email.setHtmlMsg(this.Contents);
        email.setTextMsg("Your email client does not support HTML messages");
        email.addTo(this.To);
        email.addPart(this.Attachment, this.AttachmentMimetype);
        email.send();

        return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public String toString()
	{
		return "SendEmail";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
