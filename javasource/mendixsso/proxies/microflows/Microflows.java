// This file was generated by Mendix Modeler 7.23.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package mendixsso.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the MendixSSO module
	public static boolean afterStartup_MendixSSO(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.Boolean)Core.execute(context, "MendixSSO.AfterStartup_MendixSSO", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean checkUserRolesRemoved(IContext context, system.proxies.User _user)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("User", _user == null ? null : _user.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "MendixSSO.CheckUserRolesRemoved", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void cleanupAuthRequest(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MendixSSO.CleanupAuthRequest", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static mendixsso.proxies.MendixSSOUser createMendixSSOUser(IContext context, mendixsso.proxies.UserProfile _userProfile)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("UserProfile", _userProfile == null ? null : _userProfile.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "MendixSSO.CreateMendixSSOUser", params);
			return result == null ? null : mendixsso.proxies.MendixSSOUser.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String decrypt(IContext context, java.lang.String _encrypted)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Encrypted", _encrypted);
			return (java.lang.String)Core.execute(context, "MendixSSO.Decrypt", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static mendixsso.proxies.DecryptedToken dS_GetCurrentAccessToken(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "MendixSSO.DS_GetCurrentAccessToken", params);
			return result == null ? null : mendixsso.proxies.DecryptedToken.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static mendixsso.proxies.DecryptedToken dS_GetCurrentIdToken(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "MendixSSO.DS_GetCurrentIdToken", params);
			return result == null ? null : mendixsso.proxies.DecryptedToken.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static mendixsso.proxies.MendixSSOUser dS_GetCurrentMendixSSOUser(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "MendixSSO.DS_GetCurrentMendixSSOUser", params);
			return result == null ? null : mendixsso.proxies.MendixSSOUser.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static mendixsso.proxies.DecryptedToken dS_GetCurrentRefreshToken(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "MendixSSO.DS_GetCurrentRefreshToken", params);
			return result == null ? null : mendixsso.proxies.DecryptedToken.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static mendixsso.proxies.MendixSSOConfigurationView dS_GetMendixSSOConfiguration(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "MendixSSO.DS_GetMendixSSOConfiguration", params);
			return result == null ? null : mendixsso.proxies.MendixSSOConfigurationView.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String encrypt(IContext context, java.lang.String _plain)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Plain", _plain);
			return (java.lang.String)Core.execute(context, "MendixSSO.Encrypt", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean initializeMendixSSORequestHandler(IContext context, java.lang.String _createUserMicroflowName, java.lang.String _updateUserMicroflowName)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CreateUserMicroflowName", _createUserMicroflowName);
			params.put("UpdateUserMicroflowName", _updateUserMicroflowName);
			return (java.lang.Boolean)Core.execute(context, "MendixSSO.InitializeMendixSSORequestHandler", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void invokeOnFirstLoginSSOUser(IContext context, mendixsso.proxies.UserProfile _userProfile)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("UserProfile", _userProfile == null ? null : _userProfile.getMendixObject());
			Core.execute(context, "MendixSSO.InvokeOnFirstLoginSSOUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static mendixsso.proxies.Response invokeOnNonFirstLoginSSOUser(IContext context, mendixsso.proxies.UserProfile _userProfile)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("UserProfile", _userProfile == null ? null : _userProfile.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "MendixSSO.InvokeOnNonFirstLoginSSOUser", params);
			return result == null ? null : mendixsso.proxies.Response.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DecryptAndViewToken(IContext context, mendixsso.proxies.Token _token)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Token", _token == null ? null : _token.getMendixObject());
			Core.execute(context, "MendixSSO.IVK_DecryptAndViewToken", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteAllTokens(IContext context, java.util.List<mendixsso.proxies.Token> _tokenList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_tokenList = null;
			if (_tokenList != null)
			{
				listparam_tokenList = new java.util.ArrayList<IMendixObject>();
				for (mendixsso.proxies.Token obj : _tokenList)
					listparam_tokenList.add(obj.getMendixObject());
			}
			params.put("TokenList", listparam_tokenList);
			Core.execute(context, "MendixSSO.IVK_DeleteAllTokens", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteExpiredTokens(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MendixSSO.IVK_DeleteExpiredTokens", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteMendixSSOUser(IContext context, java.util.List<mendixsso.proxies.MendixSSOUser> _mendixSSOUserList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_mendixSSOUserList = null;
			if (_mendixSSOUserList != null)
			{
				listparam_mendixSSOUserList = new java.util.ArrayList<IMendixObject>();
				for (mendixsso.proxies.MendixSSOUser obj : _mendixSSOUserList)
					listparam_mendixSSOUserList.add(obj.getMendixObject());
			}
			params.put("MendixSSOUserList", listparam_mendixSSOUserList);
			Core.execute(context, "MendixSSO.IVK_DeleteMendixSSOUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_DeleteToken(IContext context, mendixsso.proxies.Token _token)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Token", _token == null ? null : _token.getMendixObject());
			Core.execute(context, "MendixSSO.IVK_DeleteToken", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NewLocalUser(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MendixSSO.IVK_NewLocalUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_NewWebserviceUser(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MendixSSO.IVK_NewWebserviceUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_RefreshTokens(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MendixSSO.IVK_RefreshTokens", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SaveChangedPassword(IContext context, mendixsso.proxies.AccountPasswordData _accountPasswordData)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AccountPasswordData", _accountPasswordData == null ? null : _accountPasswordData.getMendixObject());
			Core.execute(context, "MendixSSO.IVK_SaveChangedPassword", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SaveChangedUser(IContext context, mendixsso.proxies.MendixSSOUser _mendixSSOUser)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MendixSSOUser", _mendixSSOUser == null ? null : _mendixSSOUser.getMendixObject());
			Core.execute(context, "MendixSSO.IVK_SaveChangedUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SaveMyChangedPassword(IContext context, mendixsso.proxies.AccountPasswordData _accountPasswordData)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AccountPasswordData", _accountPasswordData == null ? null : _accountPasswordData.getMendixObject());
			Core.execute(context, "MendixSSO.IVK_SaveMyChangedPassword", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_SaveNewLocalUser(IContext context, mendixsso.proxies.AccountPasswordData _accountPasswordData)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("AccountPasswordData", _accountPasswordData == null ? null : _accountPasswordData.getMendixObject());
			Core.execute(context, "MendixSSO.IVK_SaveNewLocalUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ShowMyPasswordForm(IContext context, mendixsso.proxies.MendixSSOUser _user)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("User", _user == null ? null : _user.getMendixObject());
			Core.execute(context, "MendixSSO.IVK_ShowMyPasswordForm", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_ShowPasswordForm(IContext context, mendixsso.proxies.MendixSSOUser _user)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("User", _user == null ? null : _user.getMendixObject());
			Core.execute(context, "MendixSSO.IVK_ShowPasswordForm", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static mendixsso.proxies.Response refreshTokens(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "MendixSSO.RefreshTokens", params);
			return result == null ? null : mendixsso.proxies.Response.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void refreshUserPermissions(IContext context, java.lang.String _openId)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OpenId", _openId);
			Core.execute(context, "MendixSSO.RefreshUserPermissions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void refreshUserRoles(IContext context, system.proxies.User _user, java.lang.String _openId)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("User", _user == null ? null : _user.getMendixObject());
			params.put("OpenId", _openId);
			Core.execute(context, "MendixSSO.RefreshUserRoles", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean retrieveUserRoles(IContext context, system.proxies.User _user)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("User", _user == null ? null : _user.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "MendixSSO.RetrieveUserRoles", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sE_DeleteExpiredTokens(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MendixSSO.SE_DeleteExpiredTokens", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static mendixsso.proxies.DecryptedToken sUB_DecryptToken(IContext context, mendixsso.proxies.Token _token)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Token", _token == null ? null : _token.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "MendixSSO.SUB_DecryptToken", params);
			return result == null ? null : mendixsso.proxies.DecryptedToken.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static mendixsso.proxies.DecryptedToken sUB_GetDecryptedTokenByTypeForCurrentSession(IContext context, mendixsso.proxies.TokenType _tokenType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TokenType", _tokenType == null ? null : _tokenType.name());
			IMendixObject result = (IMendixObject)Core.execute(context, "MendixSSO.SUB_GetDecryptedTokenByTypeForCurrentSession", params);
			return result == null ? null : mendixsso.proxies.DecryptedToken.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static mendixsso.proxies.Token sUB_GetTokenByTypeForCurrentSession(IContext context, mendixsso.proxies.TokenType _tokenType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TokenType", _tokenType == null ? null : _tokenType.name());
			IMendixObject result = (IMendixObject)Core.execute(context, "MendixSSO.SUB_GetTokenByTypeForCurrentSession", params);
			return result == null ? null : mendixsso.proxies.Token.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static mendixsso.proxies.Response sUB_RefreshTokens(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "MendixSSO.SUB_RefreshTokens", params);
			return result == null ? null : mendixsso.proxies.Response.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sUB_ReplaceRenewedToken(IContext context, java.lang.String _tokenValue, mendixsso.proxies.TokenType _tokenType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TokenValue", _tokenValue);
			params.put("TokenType", _tokenType == null ? null : _tokenType.name());
			Core.execute(context, "MendixSSO.SUB_ReplaceRenewedToken", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static mendixsso.proxies.MendixSSOUser updateMendixSSOUser(IContext context, mendixsso.proxies.UserProfile _userProfile)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("UserProfile", _userProfile == null ? null : _userProfile.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "MendixSSO.UpdateMendixSSOUser", params);
			return result == null ? null : mendixsso.proxies.MendixSSOUser.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void updateUserRoles(IContext context, system.proxies.User _user)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("User", _user == null ? null : _user.getMendixObject());
			Core.execute(context, "MendixSSO.UpdateUserRoles", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}